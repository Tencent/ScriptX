name: Coverage

on:
  pull_request:
    paths-ignore:
      - 'docs/**'
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'

jobs:
  coverage-mac-clang:
    timeout-minutes: 30
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        backends: [ V8, JavaScriptCore, QuickJs, Lua ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-deps-${{ hashFiles('test/cmake/**') }}
          path: |
            build/ScriptXTestLibs
            build/googletest-src
      - name: prepare lcov
        run: |
          HOMEBREW_NO_AUTO_UPDATE=1 brew install lcov
      - name: Configure cmake
        env:
          SCRIPTX_TEST_FORCE_UPDATE_DEPS: ON
        run: |
          mkdir -p build && cd build
          cmake ../test                                       \
                -DSCRIPTX_BACKEND=${{ matrix.backends }}      \
                -DDEVOPS_ENABLE_COVERAGE=ON                   \
                -DCMAKE_BUILD_TYPE=DEBUG
      - name: Compile UnitTests
        run: |
          cd build
          cmake --build . -j $(sysctl -n hw.ncpu) --target UnitTests
      - name: Run UnitTests
        run: |
          cd build && ./UnitTests
      - name: Generate Coverate Data
        # https://clang.llvm.org/docs/SourceBasedCodeCoverage.html
        run: |
          cd build
          lcov -c -d CMakeFiles/ -o all.info
          lcov -e all.info -o coverage.info '*/ScriptX/src/*' '*/ScriptX/backend/*'

      - name: Coveralls GitHub Action
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: './build/coverage.info'
          flag-name: "Backend-${{ matrix.backends }}"
          parallel: true

  coverage-finish:
    timeout-minutes: 30
    needs: coverage-mac-clang
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true
